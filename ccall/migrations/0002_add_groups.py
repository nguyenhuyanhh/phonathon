# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-01-21 08:37
"""Add groups and apply permissions."""

from __future__ import unicode_literals

from django.db import migrations


def add_permissions(apps, schema_editor):
    """Add the default permissions for all objects."""
    from django.contrib.auth.management import create_permissions

    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, verbosity=0)
        app_config.models_module = None


def add_groups(apps, schema_editor):
    """Add groups and permissions."""
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    # create groups
    managers, _ = Group.objects.get_or_create(name='Managers')
    supervisors, _ = Group.objects.get_or_create(name='Supervisors')
    callers, _ = Group.objects.get_or_create(name='Callers')

    # apply permissions for User
    add = Permission.objects.get(codename='add_phonathonuser')
    change = Permission.objects.get(codename='change_phonathonuser')
    delete = Permission.objects.get(codename='delete_phonathonuser')
    # only managers and supervisors can change users
    managers.permissions.add(change)
    supervisors.permissions.add(change)
    # only manager can add or delete
    managers.permissions.add(add, delete)

    # apply permissions for Prospect
    add = Permission.objects.get(codename='add_prospect')
    change = Permission.objects.get(codename='change_prospect')
    delete = Permission.objects.get(codename='delete_prospect')
    # everyone can change a Prospect
    managers.permissions.add(change)
    supervisors.permissions.add(change)
    callers.permissions.add(change)
    # only manager can add or delete
    managers.permissions.add(add, delete)

    # apply permissions for Pledge
    add = Permission.objects.get(codename='add_pledge')
    change = Permission.objects.get(codename='change_pledge')
    delete = Permission.objects.get(codename='delete_pledge')
    # only managers can do this
    managers.permissions.add(add, change, delete)

    # apply permissions for Fund
    add = Permission.objects.get(codename='add_fund')
    change = Permission.objects.get(codename='change_fund')
    delete = Permission.objects.get(codename='delete_fund')
    # only managers can do this
    managers.permissions.add(add, change, delete)


def create_init_superuser(apps, schema_editor):
    """Create the initial superuser."""
    from django.contrib.auth.hashers import make_password

    PhonathonUser = apps.get_model('ccall', 'PhonathonUser')
    superuser = PhonathonUser(username='admin', password=make_password(
        'admin'), name='Admin', email='admin@admin.com', is_staff=True, is_superuser=True)
    superuser.save()


class Migration(migrations.Migration):

    dependencies = [
        ('ccall', '0001_initial'),
        ('auth', '__latest__')
    ]

    operations = [
        migrations.RunPython(add_permissions),
        migrations.RunPython(add_groups),
        migrations.RunPython(create_init_superuser),
    ]
